import os
import whisper
from transformers import pipeline
from flask import Flask, request, jsonify

# Initialize Flask app
app = Flask(__name__)

# Load Whisper model for transcription
print("Loading Whisper model...")
whisper_model = whisper.load_model("base")

# Load Hugging Face summarization model
print("Loading Summarization model...")
summarizer = pipeline("summarization", model="facebook/bart-large-cnn")

@app.route('/transcribe', methods=['POST'])
def transcribe():
    """Transcribe an uploaded audio file."""
    if 'file' not in request.files:
        return jsonify({"error": "No file uploaded"}), 400

    file = request.files['file']
    if file.filename == '':
        return jsonify({"error": "No file selected"}), 400

    # Save the file locally
    file_path = os.path.join("uploads", file.filename)
    os.makedirs("uploads", exist_ok=True)
    file.save(file_path)

    try:
        # Transcribe audio
        print("Transcribing audio...")
        transcription = whisper_model.transcribe(file_path)
        text = transcription['text']
        return jsonify({"transcription": text}), 200
    except Exception as e:
        return jsonify({"error": str(e)}), 500
    finally:
        # Clean up uploaded file
        os.remove(file_path)

@app.route('/summarize', methods=['POST'])
def summarize():
    """Summarize the provided text."""
    data = request.get_json()
    if not data or 'text' not in data:
        return jsonify({"error": "No text provided"}), 400

    text = data['text']
    try:
        # Summarize the text
        print("Summarizing text...")
        summary = summarizer(text, max_length=150, min_length=40, do_sample=False)
        return jsonify({"summary": summary[0]['summary_text']}), 200
    except Exception as e:
        return jsonify({"error": str(e)}), 500

@app.route('/transcribe-and-summarize', methods=['POST'])
def transcribe_and_summarize():
    """Transcribe an audio file and summarize the transcription."""
    if 'file' not in request.files:
        return jsonify({"error": "No file uploaded"}), 400

    file = request.files['file']
    if file.filename == '':
        return jsonify({"error": "No file selected"}), 400

    # Save the file locally
    file_path = os.path.join("uploads", file.filename)
    os.makedirs("uploads", exist_ok=True)
    file.save(file_path)

    try:
        # Transcribe audio
        print("Transcribing audio...")
        transcription = whisper_model.transcribe(file_path)
        text = transcription['text']

        # Summarize the transcription
        print("Summarizing transcription...")
        summary = summarizer(text, max_length=150, min_length=40, do_sample=False)

        return jsonify({"transcription": text, "summary": summary[0]['summary_text']}), 200
    except Exception as e:
        return jsonify({"error": str(e)}), 500
    finally:
        # Clean up uploaded file
        os.remove(file_path)

if __name__ == '__main__':
    app.run(debug=True)
